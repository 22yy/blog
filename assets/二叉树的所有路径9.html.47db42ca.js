import{_ as t}from"./plugin-vue_export-helper.21dcd24c.js";import{o as e,c as p,a as n,b as o,d as s,e as c,r as i}from"./app.0b0fc47d.js";const l={},u=n("h1",{id:"\u4E8C\u53C9\u6811\u7684\u6240\u6709\u8DEF\u5F84",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u4E8C\u53C9\u6811\u7684\u6240\u6709\u8DEF\u5F84","aria-hidden":"true"},"#"),s(" \u4E8C\u53C9\u6811\u7684\u6240\u6709\u8DEF\u5F84")],-1),r=n("h2",{id:"_257-\u4E8C\u53C9\u6811\u7684\u6240\u6709\u8DEF\u5F84",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_257-\u4E8C\u53C9\u6811\u7684\u6240\u6709\u8DEF\u5F84","aria-hidden":"true"},"#"),s(" 257.\u4E8C\u53C9\u6811\u7684\u6240\u6709\u8DEF\u5F84")],-1),d={href:"https://leetcode.cn/problems/binary-tree-paths/",target:"_blank",rel:"noopener noreferrer"},k=s("\u94FE\u63A5"),v=c(`<h3 id="\u9012\u5F52" tabindex="-1"><a class="header-anchor" href="#\u9012\u5F52" aria-hidden="true">#</a> \u9012\u5F52</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">binaryTreePaths</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">root</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
   <span class="token comment">//\u9012\u5F52\u904D\u5386+\u9012\u5F52\u4E09\u90E8\u66F2</span>
   <span class="token keyword">let</span> res<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
   <span class="token comment">//1. \u786E\u5B9A\u9012\u5F52\u51FD\u6570 \u51FD\u6570\u53C2\u6570</span>
   <span class="token keyword">const</span> <span class="token function-variable function">getPath</span><span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">node<span class="token punctuation">,</span>curPath</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token comment">//2. \u786E\u5B9A\u7EC8\u6B62\u6761\u4EF6\uFF0C\u5230\u53F6\u5B50\u8282\u70B9\u5C31\u7EC8\u6B62</span>
       <span class="token keyword">if</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>left<span class="token operator">===</span><span class="token keyword">null</span><span class="token operator">&amp;&amp;</span>node<span class="token punctuation">.</span>right<span class="token operator">===</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
           curPath<span class="token operator">+=</span>node<span class="token punctuation">.</span>val<span class="token punctuation">;</span>
           res<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>curPath<span class="token punctuation">)</span><span class="token punctuation">;</span>
           <span class="token keyword">return</span> <span class="token punctuation">;</span>
       <span class="token punctuation">}</span>
       <span class="token comment">//3. \u786E\u5B9A\u5355\u5C42\u9012\u5F52\u903B\u8F91</span>
       curPath<span class="token operator">+=</span>node<span class="token punctuation">.</span>val<span class="token operator">+</span><span class="token string">&#39;-&gt;&#39;</span><span class="token punctuation">;</span>
       node<span class="token punctuation">.</span>left<span class="token operator">&amp;&amp;</span><span class="token function">getPath</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>left<span class="token punctuation">,</span>curPath<span class="token punctuation">)</span><span class="token punctuation">;</span>
       node<span class="token punctuation">.</span>right<span class="token operator">&amp;&amp;</span><span class="token function">getPath</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>right<span class="token punctuation">,</span>curPath<span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span>
   <span class="token function">getPath</span><span class="token punctuation">(</span>root<span class="token punctuation">,</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token keyword">return</span> res<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2);function m(h,_){const a=i("ExternalLinkIcon");return e(),p("div",null,[u,r,n("p",null,[n("a",d,[k,o(a)])]),v])}var g=t(l,[["render",m],["__file","\u4E8C\u53C9\u6811\u7684\u6240\u6709\u8DEF\u5F849.html.vue"]]);export{g as default};

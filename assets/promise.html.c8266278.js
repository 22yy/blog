import{_ as n}from"./plugin-vue_export-helper.21dcd24c.js";import{o as s,c as a,e as p}from"./app.946a5a33.js";const t={},e=p(`<h1 id="promise" tabindex="-1"><a class="header-anchor" href="#promise" aria-hidden="true">#</a> Promise</h1><blockquote><p>promise \u5BF9\u8C61\u662F\u5F02\u6B65\u7F16\u7A0B\u7684\u4E00\u79CD\u89E3\u51B3\u65B9\u6848\uFF0CPromise \u662F\u4E00\u4E2A\u6784\u9020\u51FD\u6570\uFF0C\u63A5\u53D7\u4E00\u4E2A\u51FD\u6570\u4F5C\u4E3A\u53C2\u6570\uFF0C\u8FD4\u56DE\u4E00\u4E2A Promise \u5B9E\u4F8B\uFF0C\u4E00\u4E2A Promise \u6709\u4E09\u79CD\u72B6\u6001\uFF0Cpending,resolved,rejected,\u5B9E\u4F8B\u72B6\u6001\u53EA\u80FD\u7531 pending \u8F6C\u6362\u4E3A resolved \u6216\u8005 rejected\uFF0C\u72B6\u6001\u4E00\u7ECF\u6539\u53D8\u5C31\u4E0D\u80FD\u6539\u53D8</p></blockquote><blockquote><p>\u72B6\u6001\u7684\u6539\u53D8\u662F\u901A\u8FC7 resolve(\uFF09\u548C reiect\uFF08\uFF09\u51FD\u6570\u6765\u5B9E\u73B0\u7684\uFF0C\u53EF\u4EE5\u5728\u5F02\u6B65\u64CD\u4F5C\u7ED3\u675F\u540E\u8C03\u7528\u8FD9\u4E24\u4E2A\u51FD\u6570\u6539\u53D8 Promise \u5B9E\u4F8B\u7684\u72B6\u6001\uFF0C\u5B83\u7684\u539F\u578B\u4E0A\u5B9A\u4E49\u4E86\u4E00\u4E2A then \u65B9\u6CD5\uFF0C\u4F7F\u7528\u8FD9\u4E2A then \u65B9\u6CD5\u53EF\u4EE5\u4E3A\u4E24\u4E2A\u72B6\u6001\u7684\u6539\u53D8\u6CE8\u518C\u56DE\u8C03\u51FD\u6570\u3002\u8FD9\u4E2A\u56DE\u8C03\u51FD\u6570\u5C5E\u4E8E\u5FAE\u4EFB\u52A1\uFF0C\u4F1A\u5728\u672C\u8F6E\u4E8B\u4EF6\u5FAA\u73AF\u7684\u672A\u5C3E\u6267\u884C</p></blockquote><p><b>executor</b></p><p>Executor \u662F\u5728\u521B\u5EFA Promise \u65F6\u9700\u8981\u4F20\u5165\u7684\u4E00\u4E2A\u56DE\u8C03\u51FD\u6570\uFF0C\u8FD9\u4E2A\u56DE\u8C03\u51FD\u6570\u4F1A\u88AB\u7ACB\u5373\u6267\u884C\uFF0C\u5E76\u4E14\u4F20\u5165\u4E24\u4E2A\u53C2\u6570\uFF1A</p><p>\u901A\u5E38\u5728 Executor \u4E2D\u786E\u5B9A Promise \u72B6\u6001\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;executor\u4EE3\u7801&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><b>resolve \u4E0D\u540C\u503C\u7684\u533A\u522B</b></p><ol><li><p>\u5982\u679C resolve \u4F20\u5165\u4E00\u4E2A\u666E\u901A\u7684\u503C\u6216\u8005\u5BF9\u8C61\uFF0C\u90A3\u4E48\u8FD9\u4E2A\u503C\u4F1A\u4F5C\u4E3A then \u56DE\u8C03\u7684\u53C2\u6570\uFF1B</p></li><li><p>\u5982\u679C resolve \u4E2D\u4F20\u5165\u7684\u662F\u53E6\u5916\u4E00\u4E2A Promise\uFF0C\u90A3\u4E48\u8FD9\u4E2A\u65B0 Promise \u4F1A\u51B3\u5B9A\u539F Promise \u7684\u72B6\u6001\uFF1A</p></li><li><p>\u5982\u679C resolve \u4E2D\u4F20\u5165\u7684\u662F\u4E00\u4E2A\u5BF9\u8C61\uFF0C\u5E76\u4E14\u8FD9\u4E2A\u5BF9\u8C61\u6709\u5B9E\u73B0 then \u65B9\u6CD5\uFF0C\u90A3\u4E48\u4F1A\u6267\u884C\u8BE5 then \u65B9\u6CD5\uFF0C\u5E76\u4E14\u6839\u636E then \u65B9\u6CD5\u7684\u7ED3 \u679C\u6765\u51B3\u5B9A Promise \u7684\u72B6\u6001\uFF1A</p></li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">resolve</span><span class="token punctuation">(</span>
    <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&quot;\u7B2C\u4E8CPromise\u7684resolve&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">3000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;res:&quot;</span><span class="token punctuation">,</span> res<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;err:&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token function-variable function">then</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&quot;thenable value&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="promise-\u5B9E\u4F8B\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#promise-\u5B9E\u4F8B\u65B9\u6CD5" aria-hidden="true">#</a> promise \u5B9E\u4F8B\u65B9\u6CD5</h2><p><b>then \u7684\u4E24\u4E2A\u53C2\u6570</b></p><p>then \u65B9\u6CD5\u63A5\u53D7\u4E24\u4E2A\u53C2\u6570\uFF1A</p><ul><li><p>fulfilled \u7684\u56DE\u8C03\u51FD\u6570\uFF1A\u5F53\u72B6\u6001\u53D8\u6210 fulfilled \u65F6\u4F1A\u56DE\u8C03\u7684\u51FD\u6570\uFF1B</p></li><li><p>reject \u7684\u56DE\u8C03\u51FD\u6570\uFF1A\u5F53\u72B6\u6001\u53D8\u6210 reject \u65F6\u4F1A\u56DE\u8C03\u7684\u51FD\u6570\uFF1B</p></li></ul><p>then \u65B9\u6CD5\u653E\u5728 Promise \u7684\u539F\u578B\u4E0A\uFF0C\u4E00\u4E2A Promise \u7684 then \u65B9\u6CD5\u662F\u53EF\u4EE5\u88AB\u591A\u6B21\u8C03\u7528\u7684\uFF0C\u6BCF\u6B21\u8C03\u7528\u90FD\u53EF\u4EE5\u4F20\u5165\u5BF9\u5E94\u7684 fulfilled \u56DE\u8C03\uFF0C\u5F53 Promise \u7684\u72B6\u6001\u53D8\u6210 fulfilled \u7684\u65F6\u5019\uFF0C\u8FD9\u4E9B\u56DE\u8C03\u51FD\u6570\u90FD\u4F1A\u88AB\u6267\u884C</p><p><b>then \u8FD4\u56DE\u503C</b></p><p>then \u65B9\u6CD5\u672C\u8EAB\u662F\u6709\u8FD4\u56DE\u503C\u7684\uFF0C\u5B83\u7684\u8FD4\u56DE\u503C\u662F\u4E00\u4E2A Promise\uFF0C\u6240\u4EE5\u53EF\u4EE5\u8FDB\u884C\u94FE\u5F0F\u8C03\u7528</p><p>then \u65B9\u6CD5\u8FD4\u56DE\u7684 Promise \u5230\u5E95\u5904\u4E8E\u4EC0\u4E48\u6837\u7684\u72B6\u6001\u5462\uFF1F</p><ul><li>\u5F53 then \u65B9\u6CD5\u4E2D\u7684\u56DE\u8C03\u51FD\u6570\u672C\u8EAB\u5728\u6267\u884C\u7684\u65F6\u5019\uFF0C\u90A3\u4E48\u5B83\u5904\u4E8E pending \u72B6\u6001\uFF1B</li><li>\u5F53 then \u65B9\u6CD5\u4E2D\u7684\u56DE\u8C03\u51FD\u6570\u8FD4\u56DE\u4E00\u4E2A\u7ED3\u679C\u65F6\uFF0C\u90A3\u4E48\u5B83\u5904\u4E8E fulfilled \u72B6\u6001\uFF0C\u5E76\u4E14\u4F1A\u5C06\u7ED3\u679C\u4F5C\u4E3A resolve \u7684\u53C2\u6570\uFF1B <ul><li>\u8FD4\u56DE\u4E00\u4E2A\u666E\u901A\u7684\u503C\uFF1B</li><li>\u8FD4\u56DE\u4E00\u4E2A Promise\uFF1B</li><li>\u8FD4\u56DE\u4E00\u4E2A thenable \u503C\uFF1B</li></ul></li><li>\u5F53 then \u65B9\u6CD5\u629B\u51FA\u4E00\u4E2A\u5F02\u5E38\u65F6\uFF0C\u90A3\u4E48\u5B83\u5904\u4E8E reject \u72B6\u6001\uFF1B</li></ul><p><b>catch</b></p><p>catch \u65B9\u6CD5\u4E5F\u662F\u653E\u5728 Promise \u7684\u539F\u578B\u4E0A\u7684 Promise.prototype.catch</p><p>\u4E00\u4E2A Promise \u7684 catch \u65B9\u6CD5\u662F\u53EF\u4EE5\u88AB\u591A\u6B21\u8C03\u7528\u7684\uFF1A</p><p>\u6BCF\u6B21\u8C03\u7528\u90FD\u53EF\u4EE5\u4F20\u5165\u5BF9\u5E94\u7684 reject \u56DE\u8C03\uFF1B</p><p>\u5F53 Promise \u7684\u72B6\u6001\u53D8\u6210 reject \u7684\u65F6\u5019\uFF0C\u8FD9\u4E9B\u56DE\u8C03\u51FD\u6570\u90FD\u4F1A\u88AB\u6267\u884C</p><p><b>catch \u8FD4\u56DE\u503C</b></p><p>catch \u8FD4\u56DE\u4E00\u4E2A Promise \u5BF9\u8C61\uFF0C\u6240\u4EE5 catch \u65B9\u6CD5\u540E\u9762\u53EF\u4EE5\u7EE7\u7EED\u8C03\u7528 then \u65B9\u6CD5\u6216\u8005 catch \u65B9\u6CD5</p><p>\u4E0B\u9762\u7684\u4EE3\u7801\uFF0C\u540E\u7EED\u662F res \u6253\u5370\uFF0C\u8FD9\u662F\u56E0\u4E3A catch \u4F20\u5165\u7684\u56DE\u8C03\u5728\u6267\u884C\u5B8C\u540E\uFF0C\u9ED8\u8BA4\u72B6\u6001\u4F9D\u7136\u4F1A\u662F fulfilled \u7684\uFF1B</p><p>\u5982\u679C\u6211\u4EEC\u5E0C\u671B\u540E\u7EED\u7EE7\u7EED\u6267\u884C catch\uFF0C\u53EF\u4EE5\u629B\u51FA\u4E00\u4E2A\u5F02\u5E38</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>promise
  <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;err1:&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// throw new Error(&#39;error message&#39;)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;err2:&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;res:&quot;</span><span class="token punctuation">,</span> res<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//res: undefined</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><b>finally</b></p><p>\u8868\u793A\u65E0\u8BBA Promise \u5BF9\u8C61\u65E0\u8BBA\u53D8\u6210 fulfilled \u8FD8\u662F rejected \u72B6\u6001\uFF0C\u6700\u7EC8\u90FD\u4F1A\u88AB\u6267\u884C\u7684\u4EE3\u7801\u3002</p><p>finally \u65B9\u6CD5\u662F\u4E0D\u63A5\u6536\u53C2\u6570\u7684</p><h2 id="promise-\u7C7B\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#promise-\u7C7B\u65B9\u6CD5" aria-hidden="true">#</a> Promise \u7C7B\u65B9\u6CD5</h2><p><b>Promise.resolve()</b></p><p>Promise.resolve \u7684\u7528\u6CD5\u76F8\u5F53\u4E8E new Promise\uFF0C\u5E76\u4E14\u6267\u884C resolve \u64CD\u4F5C\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&quot;why&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u7B49\u4EF7\u4E8E</span>
<span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&quot;why&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>resolve \u53C2\u6570\u5F62\u6001</p><ul><li>\u666E\u901A\u503C\u6216\u5BF9\u8C61</li><li>Promise</li><li>thenable</li></ul><p><b>Promise.reject()</b></p><p>Promise.reject \u7684\u7528\u6CD5\u76F8\u5F53\u4E8E new Promise\uFF0C\u53EA\u662F\u4F1A\u8C03\u7528 reject\uFF1A</p><p>Promise.reject \u4F20\u5165\u7684\u53C2\u6570\u65E0\u8BBA\u662F\u4EC0\u4E48\u5F62\u6001\uFF0C\u90FD\u4F1A\u76F4\u63A5\u4F5C\u4E3A reject \u72B6\u6001\u7684\u53C2\u6570\u4F20\u9012\u5230 catch \u7684</p><p><b>Promise.all()</b></p><p>\u5B83\u7684\u4F5C\u7528\u662F\u5C06\u591A\u4E2A Promise \u5305\u88F9\u5728\u4E00\u8D77\u5F62\u6210\u4E00\u4E2A\u65B0\u7684 Promise</p><p>\u65B0\u7684 Promise \u72B6\u6001\u7531\u5305\u88F9\u7684\u6240\u6709 Promise \u5171\u540C\u51B3\u5B9A</p><ul><li>\u6240\u6709\u7684 Promise \u72B6\u6001\u53D8\u6210 fulfilled \u72B6\u6001\u65F6\uFF0C\u65B0\u7684 Promise \u72B6\u6001\u4E3A fulfilled\uFF0C\u5E76\u4E14\u4F1A\u5C06\u6240\u6709 Promise \u7684\u8FD4\u56DE\u503C\u7EC4\u6210\u4E00\u4E2A\u6570\u7EC4</li><li>\u5F53\u6709\u4E00\u4E2A Promise \u72B6\u6001\u4E3A reject \u65F6\uFF0C\u65B0\u7684 Promise \u72B6\u6001\u4E3A reject\uFF0C\u5E76\u4E14\u4F1A\u5C06\u7B2C\u4E00\u4E2A reject \u7684\u8FD4\u56DE\u503C\u4F5C\u4E3A\u53C2\u6570</li></ul><p><b>Promise.allSettled()</b></p><p>\u8BE5\u65B9\u6CD5\u4F1A\u5728\u6240\u6709\u7684 Promise \u90FD\u6709\u7ED3\u679C\uFF08settled\uFF09\uFF0C\u65E0\u8BBA\u662F fulfilled\uFF0C\u8FD8\u662F rejected \u65F6\uFF0C\u624D\u4F1A\u6709\u6700\u7EC8\u7684\u72B6\u6001</p><p>\u5E76\u4E14\u8FD9\u4E2A Promise \u7684\u7ED3\u679C\u4E00\u5B9A\u662F fulfilled \u7684</p><p>allSettled \u7684\u7ED3\u679C\u662F\u4E00\u4E2A\u6570\u7EC4\uFF0C\u6570\u7EC4\u4E2D\u5B58\u653E\u7740\u6BCF\u4E00\u4E2A Promise \u7684\u7ED3\u679C\uFF0C\u5E76\u4E14\u662F\u5BF9\u5E94\u4E00\u4E2A\u5BF9\u8C61\u7684\uFF1B</p><p>\u8FD9\u4E2A\u5BF9\u8C61\u4E2D\u5305\u542B status \u72B6\u6001\uFF0C\u4EE5\u53CA\u5BF9\u5E94\u7684 value \u503C\uFF1B</p><p><b>Promise.race()</b></p><p>\u8868\u793A\u591A\u4E2A Promise \u76F8\u4E92\u7ADE\u4E89\uFF0C\u8C01\u5148\u6709\u7ED3\u679C\uFF0C\u90A3\u4E48\u5C31\u4F7F\u7528\u8C01\u7684\u7ED3\u679C\uFF1B</p><p><b>Promise.any()</b></p><p>any \u65B9\u6CD5\u4F1A\u7B49\u5230\u4E00\u4E2A fulfilled \u72B6\u6001\uFF0C\u624D\u4F1A\u51B3\u5B9A\u65B0 Promise \u7684\u72B6\u6001</p><p>\u5982\u679C\u6240\u6709\u7684 Promise \u90FD\u662F reject \u7684\uFF0C\u90A3\u4E48\u4E5F\u4F1A\u7B49\u5230\u6240\u6709\u7684 Promise \u90FD\u53D8\u6210 rejected \u72B6\u6001\uFF1B</p><p>\u5982\u679C\u6240\u6709\u7684 Promise \u90FD\u662F reject \u7684\uFF0C\u90A3\u4E48\u4F1A\u62A5\u4E00\u4E2A AggregateError \u7684\u9519\u8BEF</p><h2 id="\u5B9E\u73B0-promise" tabindex="-1"><a class="header-anchor" href="#\u5B9E\u73B0-promise" aria-hidden="true">#</a> \u5B9E\u73B0 promise</h2><p>\u6838\u5FC3\u529F\u80FD</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token constant">PENDING</span> <span class="token operator">=</span> <span class="token string">&quot;pending&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token constant">FULLFILLED</span> <span class="token operator">=</span> <span class="token string">&quot;fullfilled&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token constant">REJECTED</span> <span class="token operator">=</span> <span class="token string">&quot;rejected&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name">myPromise</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">excutor</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
      <span class="token function">excutor</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>resolve<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>reject<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">{</span>
      <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&quot;excutor error&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  status <span class="token operator">=</span> <span class="token constant">PENDING</span><span class="token punctuation">;</span>
  value <span class="token operator">=</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>
  reason <span class="token operator">=</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>

  successCallback <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  failCallback <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

  <span class="token function-variable function">resolve</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>status <span class="token operator">!==</span> <span class="token constant">PENDING</span><span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>status <span class="token operator">=</span> <span class="token constant">FULLFILLED</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>value <span class="token operator">=</span> value<span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>successCallback<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token keyword">this</span><span class="token punctuation">.</span>successCallback<span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token function-variable function">reject</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">reason</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>status <span class="token operator">!==</span> <span class="token constant">PENDING</span><span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>status <span class="token operator">=</span> <span class="token constant">REJECTED</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>reason <span class="token operator">=</span> reason<span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>failCallback<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token keyword">this</span><span class="token punctuation">.</span>failCallback<span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">successCallback<span class="token punctuation">,</span> failCallback</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> promise2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">myPromise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token constant">FULLFILLED</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u53D8\u6210\u5F02\u6B65\u4EE3\u7801, \u786E\u4FDD\u80FD\u83B7\u53D6\u5230promise2</span>
        <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token keyword">let</span> x <span class="token operator">=</span> <span class="token function">successCallback</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">resolvePromise</span><span class="token punctuation">(</span>promise2<span class="token punctuation">,</span> x<span class="token punctuation">,</span> resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">reject</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token constant">REJECTED</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token keyword">let</span> x <span class="token operator">=</span> <span class="token function">failCallback</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>reason<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">resolvePromise</span><span class="token punctuation">(</span>promise2<span class="token punctuation">,</span> x<span class="token punctuation">,</span> resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">reject</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token comment">//\u7B49\u5F85 \u5C06\u6210\u529F\u56DE\u8C03\u548C\u5931\u8D25\u56DE\u8C03\u5B58\u50A8\u8D77\u6765</span>
        <span class="token comment">//</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>successCallback<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
              <span class="token keyword">let</span> x <span class="token operator">=</span> <span class="token function">successCallback</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
              <span class="token function">resolvePromise</span><span class="token punctuation">(</span>promise2<span class="token punctuation">,</span> x<span class="token punctuation">,</span> resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
              <span class="token function">reject</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
          <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>failCallback<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
              <span class="token keyword">let</span> x <span class="token operator">=</span> <span class="token function">failCallback</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>reason<span class="token punctuation">)</span><span class="token punctuation">;</span>
              <span class="token function">resolvePromise</span><span class="token punctuation">(</span>promise2<span class="token punctuation">,</span> x<span class="token punctuation">,</span> resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
              <span class="token function">reject</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
          <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">//then\u65B9\u6CD5\u8FD4\u56DEpromise\uFF0C\u5B9E\u73B0\u94FE\u5F0F\u8C03\u7528</span>
    <span class="token keyword">return</span> promise2<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">resolvePromise</span><span class="token punctuation">(</span><span class="token parameter">promise2<span class="token punctuation">,</span> x<span class="token punctuation">,</span> resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u5224\u65ADx\u662F\u666E\u901A\u503C\u8FD8\u662Fpromise\u5BF9\u8C61</span>
  <span class="token comment">// \u666E\u901A\u503C\u76F4\u63A5\u8C03\u7528reslove</span>
  <span class="token comment">//\u5982\u679C\u662Fpromise\u5BF9\u8C61\uFF0C\u67E5\u770Bpromise\u5BF9\u8C61\u8FD4\u56DE\u7684\u7ED3\u679C\uFF0C\u518D\u6839\u636Epromise\u5BF9\u8C61\u8FD4\u56DE\u7684\u7ED3\u679C\uFF0C\u51B3\u5B9A\u8C03\u7528resolve\uFF0C\u8FD8\u662Freject</span>
  <span class="token comment">//\u5224\u65ADx\u7684\u503C\uFF0C\u5224\u65ADx\u548Cpromise2\u662F\u5426\u76F8\u7B49\uFF0C\u76F8\u7B49\u62A5\u9519\uFF0C\u4E0D\u80FD\u81EA\u5DF1\u8FD4\u56DE\u81EA\u5DF1</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>promise2 <span class="token operator">===</span> x<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">reject</span><span class="token punctuation">(</span>
      <span class="token keyword">new</span> <span class="token class-name">TypeError</span><span class="token punctuation">(</span><span class="token string">&quot;Chainng cycle detected for promise #&lt;Promise&gt;&lt;/Promise&gt;&quot;</span><span class="token punctuation">)</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>x <span class="token keyword">instanceof</span> <span class="token class-name">myPromise</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    x<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token function">resolve</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> myPromise<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">successCallback<span class="token punctuation">,</span> failCallback</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5916\u90E8\u8C03\u7528then\u4E0D\u4F20\u9012\u53C2\u6570\u65F6\uFF0C\u4F1A\u5C06promise\u72B6\u6001\u4E00\u76F4\u4F20\u9012\u5230\u6709\u56DE\u8C03\u51FD\u6570\u7684then\u65B9\u6CD5\u4E2D</span>
    successCallback <span class="token operator">=</span> successCallback <span class="token operator">?</span> <span class="token function-variable function">successCallback</span> <span class="token operator">:</span> <span class="token parameter">value</span> <span class="token operator">=&gt;</span> value<span class="token punctuation">;</span>
    failCallback <span class="token operator">=</span> failCallback <span class="token operator">?</span> <span class="token function-variable function">failCallback</span> <span class="token operator">:</span> <span class="token parameter">reason</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token keyword">throw</span> reason<span class="token punctuation">}</span><span class="token punctuation">;</span>

    <span class="token keyword">let</span> promise2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">myPromise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token constant">FULLFILLED</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u53D8\u6210\u5F02\u6B65\u4EE3\u7801, \u786E\u4FDD\u80FD\u83B7\u53D6\u5230promise2</span>
        <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token keyword">let</span> x <span class="token operator">=</span> <span class="token function">successCallback</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">resolvePromise</span><span class="token punctuation">(</span>promise2<span class="token punctuation">,</span> x<span class="token punctuation">,</span> resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span>
          <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">reject</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>

      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token constant">REJECTED</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token keyword">let</span> x <span class="token operator">=</span> <span class="token function">failCallback</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>reason<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">resolvePromise</span><span class="token punctuation">(</span>promise2<span class="token punctuation">,</span> x<span class="token punctuation">,</span> resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span>
          <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">reject</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token comment">//\u7B49\u5F85 \u5C06\u6210\u529F\u56DE\u8C03\u548C\u5931\u8D25\u56DE\u8C03\u5B58\u50A8\u8D77\u6765</span>
        <span class="token comment">//</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>successCallback<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
              <span class="token keyword">let</span> x <span class="token operator">=</span> <span class="token function">successCallback</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
              <span class="token function">resolvePromise</span><span class="token punctuation">(</span>promise2<span class="token punctuation">,</span> x<span class="token punctuation">,</span> resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
              <span class="token function">reject</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span>
            <span class="token punctuation">}</span>
          <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>failCallback<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
              <span class="token keyword">let</span> x <span class="token operator">=</span> <span class="token function">failCallback</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>reason<span class="token punctuation">)</span><span class="token punctuation">;</span>
              <span class="token function">resolvePromise</span><span class="token punctuation">(</span>promise2<span class="token punctuation">,</span> x<span class="token punctuation">,</span> resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
              <span class="token function">reject</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span>
            <span class="token punctuation">}</span>
          <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>

    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


    <span class="token comment">//then\u65B9\u6CD5\u8FD4\u56DEpromise\uFF0C\u5B9E\u73B0\u94FE\u5F0F\u8C03\u7528</span>
    <span class="token keyword">return</span> promise2
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,60),o=[e];function c(l,i){return s(),a("div",null,o)}var r=n(t,[["render",c],["__file","promise.html.vue"]]);export{r as default};

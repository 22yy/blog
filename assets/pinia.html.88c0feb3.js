import{_ as n}from"./plugin-vue_export-helper.21dcd24c.js";import{o as s,c as a,e as t}from"./app.97326f82.js";const e={},p=t(`<h1 id="pinia" tabindex="-1"><a class="header-anchor" href="#pinia" aria-hidden="true">#</a> Pinia</h1><p>Pinia\u672C\u8D28\u4E0A\u662F\u4E00\u4E2A\u72B6\u6001\u7BA1\u7406\u7684\u5E93\uFF0C\u7528\u4E8E\u8DE8\u7EC4\u4EF6\u3001\u9875\u9762\u8FDB\u884C\u72B6\u6001\u5171\u4EAB\uFF08\u8FD9\u70B9\u548CVuex\u3001Redux\u4E00\u6837\uFF09</p><p>\u548CVuex\u76F8\u6BD4\uFF0CPinia\u6709\u5F88\u591A\u7684\u4F18\u52BF\uFF1A</p><ul><li><p>mutations \u4E0D\u518D\u5B58\u5728\uFF1A</p></li><li><p>\u66F4\u53CB\u597D\u7684TypeScript\u652F\u6301\uFF0CVuex\u4E4B\u524D\u5BF9TS\u7684\u652F\u6301\u5F88\u4E0D\u53CB\u597D\uFF1B</p></li><li><p>\u4E0D\u518D\u6709modules\u7684\u5D4C\u5957\u7ED3\u6784\uFF1A</p></li><li><p>\u4E5F\u4E0D\u518D\u6709\u547D\u540D\u7A7A\u95F4\u7684\u6982\u5FF5\uFF0C\u4E0D\u9700\u8981\u8BB0\u4F4F\u5B83\u4EEC\u7684\u590D\u6742\u5173\u7CFB\uFF1B</p></li></ul><h2 id="\u4F7F\u7528" tabindex="-1"><a class="header-anchor" href="#\u4F7F\u7528" aria-hidden="true">#</a> \u4F7F\u7528</h2><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> pinia
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> createPinia <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;pinia&#39;</span>

<span class="token keyword">const</span> pinia <span class="token operator">=</span> <span class="token function">createPinia</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 

<span class="token keyword">export</span> <span class="token keyword">default</span> pinia
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> pinia <span class="token keyword">from</span> <span class="token string">&#39;./store&#39;</span>

<span class="token function">createApp</span><span class="token punctuation">(</span>App<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>pinia<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">&#39;#app&#39;</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="store" tabindex="-1"><a class="header-anchor" href="#store" aria-hidden="true">#</a> Store</h2><p>\u4EC0\u4E48\u662FStore\uFF1F</p><p>\u4E00\u4E2A Store \uFF08\u5982 Pinia\uFF09\u662F\u4E00\u4E2A\u5B9E\u4F53\uFF0C\u5B83\u4F1A\u6301\u6709\u4E3A\u7ED1\u5B9A\u5230\u4F60\u7EC4\u4EF6\u6811\u7684\u72B6\u6001\u548C\u4E1A\u52A1\u903B\u8F91\uFF0C\u4E5F\u5C31\u662F\u4FDD\u5B58\u4E86\u5168\u5C40\u7684\u72B6\u6001\uFF1B</p><p>\u6709\u70B9\u50CF\u59CB\u7EC8\u5B58\u5728\uFF0C\u5E76\u4E14\u6BCF\u4E2A\u4EBA\u90FD\u53EF\u4EE5\u8BFB\u53D6\u548C\u5199\u5165\u7684\u7EC4\u4EF6\uFF1B</p><p>\u53EF\u4EE5\u5728\u5E94\u7528\u7A0B\u5E8F\u4E2D\u5B9A\u4E49\u4EFB\u610F\u6570\u91CF\u7684Store\u6765\u7BA1\u7406\u4F60\u7684\u72B6\u6001\uFF1B</p><p>Store\u6709\u4E09\u4E2A\u6838\u5FC3\u6982\u5FF5\uFF1A</p><p>state\u3001getters\u3001actions\uFF1B\u7B49\u540C\u4E8E\u7EC4\u4EF6\u7684data\u3001computed\u3001methods\uFF1B</p><p>\u4E00\u65E6 store \u88AB\u5B9E\u4F8B\u5316\uFF0C\u5C31\u53EF\u4EE5\u76F4\u63A5\u5728 store \u4E0A\u8BBF\u95EE state\u3001getters \u548C actions \u4E2D\u5B9A\u4E49\u7684\u4EFB\u4F55\u5C5E\u6027\uFF1B</p><p>\u5B9A\u4E49\u4E00\u4E2AStore\uFF1A</p><p>Store \u662F\u4F7F\u7528 defineStore() \u5B9A\u4E49\u7684</p><p>\u5E76\u4E14\u5B83\u9700\u8981\u4E00\u4E2A\u552F\u4E00\u540D\u79F0\uFF0C\u4F5C\u4E3A\u7B2C\u4E00\u4E2A\u53C2\u6570\u4F20\u9012\uFF1B</p><p>\u8FD9\u4E2A name\uFF0C\u4E5F\u79F0\u4E3A id\uFF0C\u662F\u5FC5\u8981\u7684\uFF0CPinia \u4F7F\u7528\u5B83\u6765\u5C06 store \u8FDE\u63A5\u5230 devtools\u3002</p><p>\u8FD4\u56DE\u7684\u51FD\u6570\u7EDF\u4E00\u4F7F\u7528useX\u4F5C\u4E3A\u547D\u540D\u65B9\u6848\uFF0C\u8FD9\u662F\u7EA6\u5B9A\u7684\u89C4\u8303\uFF1B</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> useCounter <span class="token operator">=</span> <span class="token function">defineStore</span><span class="token punctuation">(</span><span class="token string">&#39;counter&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token function">state</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">counter</span><span class="token operator">:</span> <span class="token number">0</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Store\u5728\u5B83\u88AB\u4F7F\u7528\u4E4B\u524D\u662F\u4E0D\u4F1A\u521B\u5EFA\u7684\uFF0C\u6211\u4EEC\u53EF\u4EE5\u901A\u8FC7\u8C03\u7528use\u51FD\u6570\u6765\u4F7F\u7528Store</p><p>Store\u83B7\u53D6\u5230\u540E\u4E0D\u80FD\u88AB\u89E3\u6784\uFF0C\u90A3\u4E48\u4F1A\u5931\u53BB\u54CD\u5E94\u5F0F\uFF1A</p><p>\u4E3A\u4E86\u4ECE Store \u4E2D\u63D0\u53D6\u5C5E\u6027\u540C\u65F6\u4FDD\u6301\u5176\u54CD\u5E94\u5F0F\uFF0C\u9700\u8981\u4F7F\u7528storeToRefs()</p><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>home<span class="token punctuation">&#39;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">&gt;</span></span>Counter: {{ counterStore.counter }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">import</span> <span class="token punctuation">{</span> useCounter <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@/store/counter&#39;</span>

<span class="token keyword">const</span> counterStore <span class="token operator">=</span> <span class="token function">userCounter</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment">// const { counter } = counterStore</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> <span class="token literal-property property">counter</span><span class="token operator">:</span> counter1 <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">toRefs</span><span class="token punctuation">(</span>counterStore<span class="token punctuation">)</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> <span class="token literal-property property">counter</span><span class="token operator">:</span> counter2 <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">storeToRefs</span><span class="token punctuation">(</span>counterStore<span class="token punctuation">)</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="state" tabindex="-1"><a class="header-anchor" href="#state" aria-hidden="true">#</a> State</h2><p>state \u662F store \u7684\u6838\u5FC3\u90E8\u5206\uFF0C\u56E0\u4E3Astore\u662F\u7528\u6765\u5E2E\u52A9\u6211\u4EEC\u7BA1\u7406\u72B6\u6001\u7684\u3002</p><p>\u5728 Pinia \u4E2D\uFF0C\u72B6\u6001\u88AB\u5B9A\u4E49\u4E3A\u8FD4\u56DE\u521D\u59CB\u72B6\u6001\u7684\u51FD\u6570\uFF1B</p><p>\u53EF\u4EE5\u901A\u8FC7 store \u5B9E\u4F8B\u8BBF\u95EE\u72B6\u6001\u6765\u76F4\u63A5\u8BFB\u53D6\u548C\u5199\u5165\u72B6\u6001\uFF1B</p><p>\u53EF\u4EE5\u901A\u8FC7\u8C03\u7528 store \u4E0A\u7684 $reset() \u65B9\u6CD5\u5C06\u72B6\u6001 \u91CD\u7F6E \u5230\u5176\u521D\u59CB\u503C\uFF1B</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> userCounter <span class="token operator">=</span> <span class="token function">defineStore</span><span class="token punctuation">(</span><span class="token string">&#39;counter&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token function-variable function">state</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">counter</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;why&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">18</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>  
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u9664\u4E86\u76F4\u63A5\u7528 store.counter++ \u4FEE\u6539 store\uFF0C\u4F60\u8FD8\u53EF\u4EE5\u8C03\u7528 $patch \u65B9\u6CD5\uFF1B</p><p>\u53EF\u4EE5\u901A\u8FC7\u5C06\u5176 $state \u5C5E\u6027\u8BBE\u7F6E\u4E3A\u65B0\u5BF9\u8C61\u6765\u66FF\u6362 Store \u7684\u6574\u4E2A\u72B6\u6001\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> counterStore <span class="token operator">=</span> <span class="token function">userCounter</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  

counterStore<span class="token punctuation">.</span>counter<span class="token operator">++</span>
counterStore<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">&#39;code&#39;</span>

counterStore<span class="token punctuation">.</span><span class="token function">$reset</span><span class="token punctuation">(</span><span class="token punctuation">)</span>   

counterStore<span class="token punctuation">.</span><span class="token function">$patch</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">counter</span><span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">&#39;dsd&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span> 

counterStore<span class="token punctuation">.</span>$state <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">counter</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;dsd&#39;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="getters" tabindex="-1"><a class="header-anchor" href="#getters" aria-hidden="true">#</a> Getters</h2><p>Getters\u76F8\u5F53\u4E8EStore\u7684\u8BA1\u7B97\u5C5E\u6027\uFF1A</p><p>\u53EF\u4EE5\u7528 defineStore() \u4E2D\u7684 getters \u5C5E\u6027\u5B9A\u4E49\uFF1B</p><p>getters\u4E2D\u53EF\u4EE5\u5B9A\u4E49\u63A5\u53D7\u4E00\u4E2Astate\u4F5C\u4E3A\u53C2\u6570\u7684\u51FD\u6570\uFF1B</p><p>\u53EF\u4EE5\u901A\u8FC7this\u6765\u8BBF\u95EE\u5230\u5F53\u524Dstore\u5B9E\u4F8B\u7684\u6240\u6709\u5176\u4ED6\u5C5E\u6027</p><p>Getters\u4E5F\u53EF\u4EE5\u8FD4\u56DE\u4E00\u4E2A\u51FD\u6570\uFF0C\u53EF\u4EE5\u63A5\u53D7\u53C2\u6570</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> userCounter <span class="token operator">=</span> <span class="token function">defineStore</span><span class="token punctuation">(</span><span class="token string">&#39;counter&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token function-variable function">state</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">counter</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;why&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">18</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token literal-property property">getters</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token function-variable function">doubleCounter</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">state</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> state<span class="token punctuation">.</span>counter <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">,</span>
    <span class="token function-variable function">dounblePlusOne</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">state</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>doubleCounter <span class="token operator">+</span> <span class="token number">1</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>   
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> counterStore <span class="token operator">=</span> <span class="token function">userCounter</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>counterStore<span class="token punctuation">.</span>doubleCounter<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="actions" tabindex="-1"><a class="header-anchor" href="#actions" aria-hidden="true">#</a> Actions</h2><p>Actions \u76F8\u5F53\u4E8E\u7EC4\u4EF6\u4E2D\u7684 methods\u3002</p><p>\u53EF\u4EE5\u4F7F\u7528 defineStore() \u4E2D\u7684 actions \u5C5E\u6027\u5B9A\u4E49\uFF0C\u5E76\u4E14\u5B83\u4EEC\u975E\u5E38\u9002\u5408\u5B9A\u4E49\u4E1A\u52A1\u903B\u8F91\uFF1B</p><p>\u548Cgetters\u4E00\u6837\uFF0C\u5728action\u4E2D\u53EF\u4EE5\u901A\u8FC7this\u8BBF\u95EE\u6574\u4E2Astore\u5B9E\u4F8B\u7684\u6240\u6709\u64CD\u4F5C\uFF1B</p><p>\u5E76\u4E14Actions\u4E2D\u662F\u652F\u6301\u5F02\u6B65\u64CD\u4F5C\u7684\uFF0C\u5E76\u4E14\u53EF\u4EE5\u7F16\u5199\u5F02\u6B65\u51FD\u6570\uFF0C\u5728\u51FD\u6570\u4E2D\u4F7F\u7528await\uFF1B</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token literal-property property">actions</span><span class="token operator">:</span> <span class="token punctuation">{</span>
  <span class="token function">increment</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>counter<span class="token operator">++</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">increment</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  counterStore<span class="token punctuation">.</span><span class="token function">increment</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,50),o=[p];function c(i,l){return s(),a("div",null,o)}var d=n(e,[["render",c],["__file","pinia.html.vue"]]);export{d as default};

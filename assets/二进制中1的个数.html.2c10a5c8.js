import{_ as e}from"./plugin-vue_export-helper.21dcd24c.js";import{o as t,c as p,a as n,b as o,d as s,e as c,r as i}from"./app.3ff8d30b.js";const l={},u=n("h1",{id:"\u4E8C\u8FDB\u5236\u4E2D1\u7684\u4E2A\u6570",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u4E8C\u8FDB\u5236\u4E2D1\u7684\u4E2A\u6570","aria-hidden":"true"},"#"),s(" \u4E8C\u8FDB\u5236\u4E2D1\u7684\u4E2A\u6570")],-1),r={href:"https://leetcode.cn/problems/er-jin-zhi-zhong-1de-ge-shu-lcof/description/",target:"_blank",rel:"noopener noreferrer"},k=s("\u94FE\u63A5"),d=c(`<p>n &amp; (n - 1)\u53EF\u4EE5\u6D88\u9664n\u6700\u53F3\u8FB9\u7684\u4E00\u4E2A 1\uFF08\u4E8C\u8FDB\u5236\u8868\u793A\uFF09</p><p>\u5982\uFF1A6\xA0&amp;\xA0(6\u22121)=4, 6=(110)2, 4=(100)2, 6&amp;(6-1) = 4, \u8FD0\u7B97\u7ED3\u679C 4 \u5373\u4E3A\u628A 6 \u7684\u4E8C\u8FDB\u5236\u4F4D\u4E2D\u7684\u6700\u4F4E\u4F4D\u7684 1 \u53D8\u4E3A 0\u4E4B\u540E\u7684\u7ED3\u679C\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">hammingWeight</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">n</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
   <span class="token keyword">while</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    
       n <span class="token operator">=</span> n <span class="token operator">&amp;</span> <span class="token punctuation">(</span>n<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
       count <span class="token operator">++</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span>
   <span class="token keyword">return</span> count<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">hammingWeight</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">n</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token comment">// \u8F6C\u6362\u4E3A\u4E8C\u8FDB\u5236\u5B57\u7B26\u4E32\u6570\u7EC4</span>
    n <span class="token operator">=</span> n<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token keyword">of</span> n<span class="token punctuation">)</span> <span class="token punctuation">{</span>
       <span class="token keyword">if</span><span class="token punctuation">(</span>i <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
           count <span class="token operator">++</span><span class="token punctuation">;</span>
       <span class="token punctuation">}</span>
   <span class="token punctuation">}</span>
    <span class="token keyword">return</span> count<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4);function v(m,b){const a=i("ExternalLinkIcon");return t(),p("div",null,[u,n("p",null,[n("a",r,[k,o(a)])]),d])}var f=e(l,[["render",v],["__file","\u4E8C\u8FDB\u5236\u4E2D1\u7684\u4E2A\u6570.html.vue"]]);export{f as default};

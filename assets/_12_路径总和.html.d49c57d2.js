import{_ as o}from"./plugin-vue_export-helper.21dcd24c.js";import{o as e,c,a as n,b as t,d as s,e as p,r as l}from"./app.60669091.js";const u={},i=n("h1",{id:"\u8DEF\u5F84\u603B\u548C",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u8DEF\u5F84\u603B\u548C","aria-hidden":"true"},"#"),s(" \u8DEF\u5F84\u603B\u548C")],-1),r=n("h2",{id:"_112-\u8DEF\u5F84\u603B\u548C",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_112-\u8DEF\u5F84\u603B\u548C","aria-hidden":"true"},"#"),s(" 112.\u8DEF\u5F84\u603B\u548C")],-1),k={href:"https://leetcode.cn/problems/path-sum/",target:"_blank",rel:"noopener noreferrer"},d=s("\u94FE\u63A5"),v=p(`<h3 id="\u9012\u5F52" tabindex="-1"><a class="header-anchor" href="#\u9012\u5F52" aria-hidden="true">#</a> \u9012\u5F52</h3><p>\u4E0D\u8981\u53BB\u7D2F\u52A0\u7136\u540E\u5224\u65AD\u662F\u5426\u7B49\u4E8E\u76EE\u6807\u548C\uFF0C\u4EE3\u7801\u6BD4\u8F83\u9EBB\u70E6\uFF0C\u53EF\u4EE5\u7528\u9012\u51CF\uFF0C\u8BA9\u8BA1\u6570\u5668count\u521D\u59CB\u4E3A\u76EE\u6807\u548C\uFF0C\u7136\u540E\u6BCF\u6B21\u51CF\u53BB\u904D\u5386\u8DEF\u5F84\u8282\u70B9\u4E0A\u7684\u6570\u503C\u3002</p><p>\u5982\u679C\u6700\u540Ecount == 0\uFF0C\u540C\u65F6\u5230\u4E86\u53F6\u5B50\u8282\u70B9\u7684\u8BDD\uFF0C\u8BF4\u660E\u627E\u5230\u4E86\u76EE\u6807\u548C\u3002</p><p>\u5982\u679C\u904D\u5386\u5230\u4E86\u53F6\u5B50\u8282\u70B9\uFF0Ccount\u4E0D\u4E3A0\uFF0C\u5C31\u662F\u6CA1\u627E\u5230\u3002</p><p>\u56E0\u4E3A\u7EC8\u6B62\u6761\u4EF6\u662F\u5224\u65AD\u53F6\u5B50\u8282\u70B9\uFF0C\u6240\u4EE5\u9012\u5F52\u7684\u8FC7\u7A0B\u4E2D\u5C31\u4E0D\u8981\u8BA9\u7A7A\u8282\u70B9\u8FDB\u5165\u9012\u5F52\u4E86\u3002</p><p>\u9012\u5F52\u51FD\u6570\u662F\u6709\u8FD4\u56DE\u503C\u7684\uFF0C\u5982\u679C\u9012\u5F52\u51FD\u6570\u8FD4\u56DEtrue\uFF0C\u8BF4\u660E\u627E\u5230\u4E86\u5408\u9002\u7684\u8DEF\u5F84\uFF0C\u5E94\u8BE5\u7ACB\u523B\u8FD4\u56DE\u3002</p><p>\u56DE\u6EAF\u9690\u85CF\u5728traversal(cur-&gt;left, count - cur-&gt;left-&gt;val)\uFF0C \u628Acount - cur-&gt;left-&gt;val \u76F4\u63A5\u4F5C\u4E3A\u53C2\u6570\u4F20\u8FDB\u53BB\uFF0C\u51FD\u6570\u7ED3\u675F\uFF0Ccount\u7684\u6570\u503C\u6CA1\u6709\u6539\u53D8\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> <span class="token function-variable function">haspathsum</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">root<span class="token punctuation">,</span> targetsum</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u9012\u5F52\u6CD5</span>
  <span class="token keyword">const</span> <span class="token function-variable function">traversal</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">node<span class="token punctuation">,</span> cnt</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u9047\u5230\u53F6\u5B50\u8282\u70B9\uFF0C\u5E76\u4E14\u8BA1\u6570\u4E3A0</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>cnt <span class="token operator">===</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>node<span class="token punctuation">.</span>left <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>node<span class="token punctuation">.</span>right<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token comment">// \u9047\u5230\u53F6\u5B50\u8282\u70B9\u800C\u6CA1\u6709\u627E\u5230\u5408\u9002\u7684\u8FB9(\u8BA1\u6570\u4E0D\u4E3A0)\uFF0C\u76F4\u63A5\u8FD4\u56DE</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>node<span class="token punctuation">.</span>left <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>node<span class="token punctuation">.</span>right<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>

    <span class="token comment">//  \u5DE6\uFF08\u7A7A\u8282\u70B9\u4E0D\u904D\u5386\uFF09.\u9047\u5230\u53F6\u5B50\u8282\u70B9\u8FD4\u56DEtrue\uFF0C\u5219\u76F4\u63A5\u8FD4\u56DEtrue</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>node<span class="token punctuation">.</span>left <span class="token operator">&amp;&amp;</span> <span class="token function">traversal</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>left<span class="token punctuation">,</span> cnt <span class="token operator">-</span> node<span class="token punctuation">.</span>left<span class="token punctuation">.</span>val<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token comment">//  \u53F3\uFF08\u7A7A\u8282\u70B9\u4E0D\u904D\u5386\uFF09  </span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>node<span class="token punctuation">.</span>right <span class="token operator">&amp;&amp;</span> <span class="token function">traversal</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>right<span class="token punctuation">,</span> cnt <span class="token operator">-</span> node<span class="token punctuation">.</span>right<span class="token punctuation">.</span>val<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>root<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token function">traversal</span><span class="token punctuation">(</span>root<span class="token punctuation">,</span> targetsum <span class="token operator">-</span> root<span class="token punctuation">.</span>val<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_113-\u8DEF\u5F84\u603B\u548Cii" tabindex="-1"><a class="header-anchor" href="#_113-\u8DEF\u5F84\u603B\u548Cii" aria-hidden="true">#</a> 113 \u8DEF\u5F84\u603B\u548CII</h3>`,9),m={href:"https://leetcode.cn/problems/path-sum-ii/",target:"_blank",rel:"noopener noreferrer"},b=s("\u94FE\u63A5"),h=p(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> <span class="token function-variable function">pathsum</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">root<span class="token punctuation">,</span> targetsum</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u9012\u5F52\u6CD5</span>
  <span class="token comment">// \u8981\u904D\u5386\u6574\u4E2A\u6811\u627E\u5230\u6240\u6709\u8DEF\u5F84\uFF0C\u6240\u4EE5\u9012\u5F52\u51FD\u6570\u4E0D\u9700\u8981\u8FD4\u56DE\u503C, \u4E0E112\u4E0D\u540C</span>
  <span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token function-variable function">travelsal</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">node<span class="token punctuation">,</span> cnt<span class="token punctuation">,</span> path</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u9047\u5230\u4E86\u53F6\u5B50\u8282\u70B9\u4E14\u627E\u5230\u4E86\u548C\u4E3Asum\u7684\u8DEF\u5F84</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>cnt <span class="token operator">===</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>node<span class="token punctuation">.</span>left <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>node<span class="token punctuation">.</span>right<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      res<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">...</span>path<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u4E0D\u80FD\u5199res.push(path), \u8981\u6DF1\u62F7\u8D1D</span>
      <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>node<span class="token punctuation">.</span>left <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>node<span class="token punctuation">.</span>right<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span> <span class="token comment">// \u9047\u5230\u53F6\u5B50\u8282\u70B9\u800C\u6CA1\u6709\u627E\u5230\u5408\u9002\u7684\u8FB9\uFF0C\u76F4\u63A5\u8FD4\u56DE</span>
    <span class="token comment">// \u5DE6 \uFF08\u7A7A\u8282\u70B9\u4E0D\u904D\u5386\uFF09</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>node<span class="token punctuation">.</span>left<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      path<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>left<span class="token punctuation">.</span>val<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token function">travelsal</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>left<span class="token punctuation">,</span> cnt <span class="token operator">-</span> node<span class="token punctuation">.</span>left<span class="token punctuation">.</span>val<span class="token punctuation">,</span> path<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u9012\u5F52</span>
      path<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u56DE\u6EAF</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u53F3 \uFF08\u7A7A\u8282\u70B9\u4E0D\u904D\u5386\uFF09</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>node<span class="token punctuation">.</span>right<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      path<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>right<span class="token punctuation">.</span>val<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token function">travelsal</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>right<span class="token punctuation">,</span> cnt <span class="token operator">-</span> node<span class="token punctuation">.</span>right<span class="token punctuation">.</span>val<span class="token punctuation">,</span> path<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u9012\u5F52</span>
      path<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u56DE\u6EAF</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>root<span class="token punctuation">)</span> <span class="token keyword">return</span> res<span class="token punctuation">;</span>
  <span class="token function">travelsal</span><span class="token punctuation">(</span>root<span class="token punctuation">,</span> targetsum <span class="token operator">-</span> root<span class="token punctuation">.</span>val<span class="token punctuation">,</span> <span class="token punctuation">[</span>root<span class="token punctuation">.</span>val<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u628A\u6839\u8282\u70B9\u653E\u8FDB\u8DEF\u5F84</span>
  <span class="token keyword">return</span> res<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1);function f(_,g){const a=l("ExternalLinkIcon");return e(),c("div",null,[i,r,n("p",null,[n("a",k,[d,t(a)])]),v,n("p",null,[n("a",m,[b,t(a)])]),h])}var x=o(u,[["render",f],["__file","_12_\u8DEF\u5F84\u603B\u548C.html.vue"]]);export{x as default};

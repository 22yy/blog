import{_ as n}from"./plugin-vue_export-helper.21dcd24c.js";import{o as s,c as a,e as t}from"./app.12e1e5a4.js";const e={},p=t(`<h1 id="\u5B9E\u73B0strstr" tabindex="-1"><a class="header-anchor" href="#\u5B9E\u73B0strstr" aria-hidden="true">#</a> \u5B9E\u73B0strStr()</h1><h2 id="_28-\u5B9E\u73B0-strstr" tabindex="-1"><a class="header-anchor" href="#_28-\u5B9E\u73B0-strstr" aria-hidden="true">#</a> 28. \u5B9E\u73B0 strStr()</h2><p>\u5B9E\u73B0\xA0strStr()\xA0\u51FD\u6570\u3002</p><p>\u7ED9\u4F60\u4E24\u4E2A\u5B57\u7B26\u4E32\xA0haystack \u548C needle \uFF0C\u8BF7\u4F60\u5728 haystack \u5B57\u7B26\u4E32\u4E2D\u627E\u51FA needle \u5B57\u7B26\u4E32\u51FA\u73B0\u7684\u7B2C\u4E00\u4E2A\u4F4D\u7F6E\uFF08\u4E0B\u6807\u4ECE 0 \u5F00\u59CB\uFF09\u3002\u5982\u679C\u4E0D\u5B58\u5728\uFF0C\u5219\u8FD4\u56DE\xA0 -1 \u3002 \u5F53 needle \u662F\u7A7A\u5B57\u7B26\u4E32\u65F6\u6211\u4EEC\u5E94\u5F53\u8FD4\u56DE 0</p><h3 id="\u66B4\u529B" tabindex="-1"><a class="header-anchor" href="#\u66B4\u529B" aria-hidden="true">#</a> \u66B4\u529B</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">strStr</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">haystack<span class="token punctuation">,</span> needle</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>needle<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token number">0</span>
   <span class="token keyword">const</span> n<span class="token operator">=</span>haystack<span class="token punctuation">.</span>length<span class="token punctuation">,</span>m<span class="token operator">=</span>needle<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
   <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>n<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
       <span class="token keyword">let</span> flag<span class="token operator">=</span><span class="token boolean">true</span><span class="token punctuation">;</span>
       <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> j<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>j<span class="token operator">&lt;</span>m<span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
           <span class="token keyword">if</span><span class="token punctuation">(</span>haystack<span class="token punctuation">[</span>i<span class="token operator">+</span>j<span class="token punctuation">]</span><span class="token operator">!==</span>needle<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
             flag<span class="token operator">=</span><span class="token boolean">false</span><span class="token punctuation">;</span>
             <span class="token keyword">break</span>
           <span class="token punctuation">}</span>
       <span class="token punctuation">}</span>
       <span class="token keyword">if</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span class="token punctuation">{</span>
       <span class="token keyword">return</span> i
     <span class="token punctuation">}</span>
   <span class="token punctuation">}</span>
   <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6),o=[p];function c(l,r){return s(),a("div",null,o)}var k=n(e,[["render",c],["__file","strStr.html.vue"]]);export{k as default};

import{_ as e}from"./plugin-vue_export-helper.21dcd24c.js";import{o as t,c as p,a as n,b as o,d as s,e as c,r as l}from"./app.ccd6f077.js";const i={},u=n("h1",{id:"\u9A8C\u8BC1\u4E8C\u53C9\u641C\u7D22\u6811",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u9A8C\u8BC1\u4E8C\u53C9\u641C\u7D22\u6811","aria-hidden":"true"},"#"),s(" \u9A8C\u8BC1\u4E8C\u53C9\u641C\u7D22\u6811")],-1),r=n("h2",{id:"_98-\u9A8C\u8BC1\u4E8C\u53C9\u641C\u7D22\u6811",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_98-\u9A8C\u8BC1\u4E8C\u53C9\u641C\u7D22\u6811","aria-hidden":"true"},"#"),s(" 98.\u9A8C\u8BC1\u4E8C\u53C9\u641C\u7D22\u6811")],-1),k={href:"https://leetcode.cn/problems/validate-binary-search-tree/description/",target:"_blank",rel:"noopener noreferrer"},d=s("\u94FE\u63A5"),v=c(`<p>\u7ED9\u4F60\u4E00\u4E2A\u4E8C\u53C9\u6811\u7684\u6839\u8282\u70B9 root \uFF0C\u5224\u65AD\u5176\u662F\u5426\u662F\u4E00\u4E2A\u6709\u6548\u7684\u4E8C\u53C9\u641C\u7D22\u6811\u3002</p><p>\u8981\u9A8C\u8BC1\uFF1A\u5DE6\u5B50\u6811\u6240\u6709\u8282\u70B9\u5C0F\u4E8E\u4E2D\u95F4\u8282\u70B9\uFF0C\u53F3\u5B50\u6811\u6240\u6709\u8282\u70B9\u5927\u4E8E\u4E2D\u95F4\u8282\u70B9</p><p>\u76F4\u63A5\u9A8C\u8BC1\u4E2D\u5E8F\u904D\u5386\u662F\u4E0D\u662F\u9012\u589E\u7684\u5E8F\u5217</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">isValidBST</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">root</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> stack <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> cur <span class="token operator">=</span> root<span class="token punctuation">;</span>
  <span class="token comment">// \u4FDD\u5B58\u524D\u4E00\u4E2A\u8282\u70B9</span>
  <span class="token keyword">let</span> pre <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
  <span class="token keyword">while</span><span class="token punctuation">(</span>stack<span class="token punctuation">.</span>length <span class="token operator">||</span> cur<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span>cur<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          stack<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>cur<span class="token punctuation">)</span><span class="token punctuation">;</span>
          cur <span class="token operator">=</span> cur<span class="token punctuation">.</span>left<span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
          cur <span class="token operator">=</span> stack<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token keyword">if</span><span class="token punctuation">(</span>pre <span class="token operator">&amp;&amp;</span> pre<span class="token punctuation">.</span>val <span class="token operator">&gt;=</span> cur<span class="token punctuation">.</span>val<span class="token punctuation">)</span> <span class="token punctuation">{</span>
              <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
          pre <span class="token operator">=</span> cur<span class="token punctuation">;</span>
          cur <span class="token operator">=</span> cur<span class="token punctuation">.</span>right<span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4);function m(_,b){const a=l("ExternalLinkIcon");return t(),p("div",null,[u,r,n("p",null,[n("a",k,[d,o(a)])]),v])}var w=e(i,[["render",m],["__file","\u9A8C\u8BC1\u4E8C\u53C9\u641C\u7D22\u681117.html.vue"]]);export{w as default};

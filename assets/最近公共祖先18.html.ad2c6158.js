import{_ as o}from"./plugin-vue_export-helper.21dcd24c.js";import{o as e,c,a as n,b as t,d as s,e as p,r as l}from"./app.ccd6f077.js";const i={},r=n("h1",{id:"\u6700\u8FD1\u516C\u5171\u7956\u5148",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u6700\u8FD1\u516C\u5171\u7956\u5148","aria-hidden":"true"},"#"),s(" \u6700\u8FD1\u516C\u5171\u7956\u5148")],-1),u=n("h2",{id:"\u4E8C\u53C9\u6811\u7684\u6700\u8FD1\u516C\u5171\u7956\u5148",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u4E8C\u53C9\u6811\u7684\u6700\u8FD1\u516C\u5171\u7956\u5148","aria-hidden":"true"},"#"),s(" \u4E8C\u53C9\u6811\u7684\u6700\u8FD1\u516C\u5171\u7956\u5148")],-1),k={href:"https://leetcode.cn/problems/lowest-common-ancestor-of-a-binary-tree/description/",target:"_blank",rel:"noopener noreferrer"},d=s("\u94FE\u63A5"),v=p(`<p>\u9012\u5F52\u904D\u5386\u9047\u5230q\u5C06q\u8FD4\u56DE\uFF0C\u9047\u5230p\u5C06p\u8FD4\u56DE\uFF0C\u5DE6\u53F3\u5B50\u6811\u7684\u8FD4\u56DE\u503C\u90FD\u4E0D\u4E3A\u7A7A\uFF0C\u8BF4\u660E\u6B64\u65F6\u7684\u4E2D\u8282\u70B9\uFF0C\u4E00\u5B9A\u662Fq \u548Cp \u7684\u6700\u8FD1\u7956\u5148\u3002</p><p>\u6700\u8FD1\u516C\u5171\u7956\u5148\u4E5F\u53EF\u80FD\u662F\u81EA\u8EAB</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">lowestCommonAncestor</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">root<span class="token punctuation">,</span> p<span class="token punctuation">,</span> q</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5982\u679Croot === p \u6216root === q\u8BF4\u660E\u627E\u5230p,q\u5C06\u5176\u8FD4\u5F52\uFF0C\u8FD4\u56DE\u503C\u540E\u9762\u8981\u7528\u5230</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>root <span class="token operator">===</span> p <span class="token operator">||</span> root <span class="token operator">===</span> q <span class="token operator">||</span> root <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> root<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u9700\u8981\u904D\u5386\u6574\u68F5\u6811\uFF0C\u7528\u53D8\u91CFleft\uFF0Cright\u63A5\u4F4F\u8FD4\u56DE\u503C\uFF0Cleft\u3001right\u540E\u5E8F\u8FD8\u6709\u903B\u8F91\u5904\u7406\u7684\u9700\u8981\uFF0C\u4E5F\u5C31\u662F\u540E\u5E8F\u904D\u5386\u4E2D\u5904\u7406\u4E2D\u95F4\u8282\u70B9\u7684\u903B\u8F91\uFF08\u4E5F\u662F\u56DE\u6EAF\uFF09\u3002  </span>
    <span class="token keyword">let</span> left <span class="token operator">=</span> <span class="token function">lowestCommonAncestor</span><span class="token punctuation">(</span>root<span class="token punctuation">.</span>left<span class="token punctuation">,</span> p<span class="token punctuation">,</span> q<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> right <span class="token operator">=</span> <span class="token function">lowestCommonAncestor</span><span class="token punctuation">(</span>root<span class="token punctuation">.</span>right<span class="token punctuation">,</span> p<span class="token punctuation">,</span> q<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u5982\u679Cleft \u548C right\u90FD\u4E0D\u4E3A\u7A7A\uFF0C\u8BF4\u660E\u6B64\u65F6root\u5C31\u662F\u6700\u8FD1\u516C\u5171\u8282\u70B9  </span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>left <span class="token operator">!==</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> right <span class="token operator">!==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> root<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u5982\u679Cleft\u4E3A\u7A7A\uFF0Cright\u4E0D\u4E3A\u7A7A\uFF0C\u5C31\u8FD4\u56DEright\uFF0C\u8BF4\u660E\u76EE\u6807\u8282\u70B9\u662F\u901A\u8FC7right\u8FD4\u56DE\u7684\uFF0C\u53CD\u4E4B\u4F9D\u7136</span>
    <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>left <span class="token operator">!==</span><span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> right <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> left<span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>left <span class="token operator">===</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> right <span class="token operator">!==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> right
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u4E8C\u53C9\u6811\u641C\u7D22\u6811\u7684\u6700\u8FD1\u516C\u5171\u7956\u5148" tabindex="-1"><a class="header-anchor" href="#\u4E8C\u53C9\u6811\u641C\u7D22\u6811\u7684\u6700\u8FD1\u516C\u5171\u7956\u5148" aria-hidden="true">#</a> \u4E8C\u53C9\u6811\u641C\u7D22\u6811\u7684\u6700\u8FD1\u516C\u5171\u7956\u5148</h2>`,4),m={href:"https://leetcode.cn/problems/lowest-common-ancestor-of-a-binary-search-tree/description/",target:"_blank",rel:"noopener noreferrer"},b=s("\u94FE\u63A5"),h=p(`<p>\u5982\u679C\u8282\u70B9\u662Fp,q\u7956\u5148\uFF0C\u90A3\u4E48\u6B64\u8282\u70B9\u4E00\u5B9A\u5728[p,q]\u533A\u95F4\u5185</p><p>\u82E5\u627E\u5230\u7B2C\u4E00\u4E2A\u5728[p,q]\u533A\u95F4\u7684\u8282\u70B9cur\uFF0C\u5982\u679Ccur\u5411\u5DE6\u8D70\u5C31\u4F1A\u9519\u8FC7\u79F0\u4E3Aq\u7684\u7956\u5148\uFF0C\u5411\u53F3\u8D70\u9519\u8FC7\u6210\u4E3Ap\u7684\u7956\u5148</p><p>\u6240\u4EE5\u4ECE\u4E0A\u5230\u4E0B\u53BB\u904D\u5386\uFF0C\u7B2C\u4E00\u6B21\u9047\u5230 cur\u8282\u70B9\u662F\u6570\u503C\u5728[p, q]\u533A\u95F4\u4E2D\uFF0C\u90A3\u4E48cur\u5C31\u662F p\u548Cq\u7684\u6700\u8FD1\u516C\u5171\u7956\u5148\u3002</p><h3 id="\u9012\u5F52" tabindex="-1"><a class="header-anchor" href="#\u9012\u5F52" aria-hidden="true">#</a> \u9012\u5F52</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">lowestCommonAncestor</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">root<span class="token punctuation">,</span> p<span class="token punctuation">,</span> q</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
   <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>root<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
   <span class="token keyword">if</span><span class="token punctuation">(</span>root<span class="token punctuation">.</span>val <span class="token operator">&gt;</span> q<span class="token punctuation">.</span>val <span class="token operator">&amp;&amp;</span> root<span class="token punctuation">.</span>val <span class="token operator">&gt;</span> p<span class="token punctuation">.</span>val<span class="token punctuation">)</span> <span class="token punctuation">{</span>
       <span class="token keyword">let</span> left <span class="token operator">=</span> <span class="token function">lowestCommonAncestor</span><span class="token punctuation">(</span>root<span class="token punctuation">.</span>left<span class="token punctuation">,</span> p<span class="token punctuation">,</span> q<span class="token punctuation">)</span><span class="token punctuation">;</span>
       <span class="token keyword">if</span><span class="token punctuation">(</span>left<span class="token punctuation">)</span> <span class="token keyword">return</span> left
   <span class="token punctuation">}</span> 
   <span class="token keyword">if</span><span class="token punctuation">(</span>root<span class="token punctuation">.</span>val <span class="token operator">&lt;</span> q<span class="token punctuation">.</span>val <span class="token operator">&amp;&amp;</span> root<span class="token punctuation">.</span>val <span class="token operator">&lt;</span> p<span class="token punctuation">.</span>val<span class="token punctuation">)</span> <span class="token punctuation">{</span>
       <span class="token keyword">let</span> right <span class="token operator">=</span> <span class="token function">lowestCommonAncestor</span><span class="token punctuation">(</span>root<span class="token punctuation">.</span>right<span class="token punctuation">,</span> p<span class="token punctuation">,</span> q<span class="token punctuation">)</span><span class="token punctuation">;</span>
       <span class="token keyword">if</span><span class="token punctuation">(</span>right<span class="token punctuation">)</span> <span class="token keyword">return</span> right<span class="token punctuation">;</span>
   <span class="token punctuation">}</span>
   <span class="token keyword">return</span> root<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u8FED\u4EE3" tabindex="-1"><a class="header-anchor" href="#\u8FED\u4EE3" aria-hidden="true">#</a> \u8FED\u4EE3</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">lowestCommonAncestor</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">root<span class="token punctuation">,</span> p<span class="token punctuation">,</span> q</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">while</span><span class="token punctuation">(</span>root<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>root<span class="token punctuation">.</span>val <span class="token operator">&gt;</span> p<span class="token punctuation">.</span>val <span class="token operator">&amp;&amp;</span> root<span class="token punctuation">.</span>val <span class="token operator">&gt;</span> q<span class="token punctuation">.</span>val<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            root <span class="token operator">=</span> root<span class="token punctuation">.</span>left<span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>root<span class="token punctuation">.</span>val <span class="token operator">&lt;</span> p<span class="token punctuation">.</span>val <span class="token operator">&amp;&amp;</span> root<span class="token punctuation">.</span>val <span class="token operator">&lt;</span> q<span class="token punctuation">.</span>val<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            root <span class="token operator">=</span> root<span class="token punctuation">.</span>right<span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> root<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,7);function f(w,y){const a=l("ExternalLinkIcon");return e(),c("div",null,[r,u,n("p",null,[n("a",k,[d,t(a)])]),v,n("p",null,[n("a",m,[b,t(a)])]),h])}var q=o(i,[["render",f],["__file","\u6700\u8FD1\u516C\u5171\u7956\u514818.html.vue"]]);export{q as default};
